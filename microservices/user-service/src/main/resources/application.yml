server:
  port: 8081 # 0으로 설정하면 random port를 사용한다는 의미 -> port의 충돌 X

spring:
  application:
    name: user-service
  zipkin:
    base-url: http://localhost:9411
    enabled: true

#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/msa-user?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&autoReconnect=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=Asia/Seoul
#    username: root
#    password: root
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
#  jpa:
#    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
#    hibernate:
#      ddl-auto: update
      #update -> 삭제안하고싶을때 #none -> 배포시에(운영환경)
#    properties:
#      hibernate:
#        default_batch_fetch_size: 500
#        #        show_sql: false
#        format_sql: true
#    open-in-view: false
#    generate-ddl: true

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true # 유레카 등록
    fetch-registry: true # 외부에서 검색 가능 -> eureka 서버로부터 인스턴스의 정보를 주기적으로 가져올것인지 설정
    service-url: #유레카 서버의 위치
      # 해당 endpoint에 현재 마이크로서비스 정보를 등록
      defaultZone: http://127.0.0.1:8761/eureka

#greeting체크 추가
greeting:
  message: Welcome to the Simple E-commerce.

logging:
  pattern:
    level: "%5p [%X{traceId:-},%X{spanId:-}]"
  level:
    com.study.service: debug
    org.hibernate.SQL: debug
# Web End point 노출 범위를 설정

management:
  tracing:
    sampling:
      probability: 1.0 # 로그 정보를 zipkin 서버에 전달할 횟수 -> 100%
    propagation:
      consume: B3
      produce: B3_MULTI
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  endpoints:
    web:
      exposure:
        # 특정 End point만 활성화
        include: refresh, health, beans, busrefresh, info, metrics, prometheus